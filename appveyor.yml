# On Windows PyD only supports Python3.4
# @See https://github.com/ariovistus/pyd/issues/50
platform: x64
environment:
 matrix:
  - DC: dmd
    DVersion: 2.071.1
    arch: x64
    PYTHON: "C:\\Python34-x64"
    PYTHON_VERSION: 3.4
    MINICONDA: C:\Miniconda3
  - DC: dmd
    DVersion: 2.071.1
    arch: x86
    PYTHON: "C:\\Python34"
    PYTHON_VERSION: "3.4"
    MINICONDA: C:\Miniconda3
  - DC: ldc
    DVersion: 1.1.0-beta2
    arch: x64

matrix:
  allow_failures:
    - DC: ldc

skip_tags: true
branches:
  only:
    - master
    - stable
    - tinflex2
cache:
  - 'C:\Miniconda3 -> appveyor.yml'
install:
  - ps: function SetUpDCompiler
        {
            if($env:DC -eq "dmd"){
              if($env:arch -eq "x86"){
                $env:DConf = "m32";
              }
              elseif($env:arch -eq "x64"){
                $env:DConf = "m64";
              }
              echo "downloading ...";
              $env:toolchain = "msvc";
              $version = $env:DVersion;
              Invoke-WebRequest "http://downloads.dlang.org/releases/2.x/$($version)/dmd.$($version).windows.7z" -OutFile "c:\dmd.7z";
              echo "finished.";
              pushd c:\\;
              7z x dmd.7z > $null;
              popd;
            }
            elseif($env:DC -eq "ldc"){
              echo "downloading ...";
              if($env:arch -eq "x86"){
                $env:DConf = "m32";
              }
              elseif($env:arch -eq "x64"){
                $env:DConf = "m64";
              }
              $env:toolchain = "msvc";
              $version = $env:DVersion;
              Invoke-WebRequest "https://github.com/ldc-developers/ldc/releases/download/v$($version)/ldc2-$($version)-win64-msvc.zip" -OutFile "c:\ldc.zip";
              echo "finished.";
              pushd c:\\;
              7z x ldc.zip > $null;
              popd;
            }
        }
  - ps: SetUpDCompiler
  - powershell -Command Invoke-WebRequest https://code.dlang.org/files/dub-1.0.0-windows-x86.zip -OutFile dub.zip
  - 7z x dub.zip -odub > nul
  - set PATH=%CD%\%binpath%;%CD%\dub;%PATH%
  - dub --version

  # ---- PYTHON setup -----
  - "ECHO %PYTHON_VERSION% %MINICONDA%"
  - "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - "conda create -q -n condaenv python=%PYTHON_VERSION% matplotlib"
  - activate condaenv

before_build:
  - ps: if($env:arch -eq "x86"){
            $env:compilersetupargs = "x86";
            $env:Darch = "x86";
          }
        elseif($env:arch -eq "x64"){
            $env:compilersetupargs = "amd64";
            $env:Darch = "x86_64";
        }
  - ps : if($env:DC -eq "dmd"){
           $env:PATH += ";C:\dmd2\windows\bin;";
         }
         elseif($env:DC -eq "ldc"){
           $version = $env:DVersion;
           $env:PATH += ";C:\ldc2-$($version)-win64-msvc\bin";
           $env:DC = "ldc2";
         }
  - ps: $env:compilersetup = "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall";
  - '"%compilersetup%" %compilersetupargs%'

build_script:
 - echo dummy build script - dont remove me
 #- sed 's/"to_be_filled"/"Flex_logging", "Flex_logging_hex"/' -i dub.json
 # For now only python 3.4 is supported with pyd
 - sed 's/python35/python34/' -i examples/flex_plot.d
 - sed 's/python35/python34/' -i examples/flex_plot/flex_common/dub.json

test_script:
 - echo %PLATFORM%
 - echo %Darch%
 - echo %DC%
 - echo %PATH%
 - '%DC% --version'
 - dub test --arch=%Darch% --compiler=%DC%
 - dub build --single examples/lda_hoffman_sparse.d
 - dub fetch imageformats
 - dub build imageformats
 - dub build --single examples/median_filter.d
 - dub build --single examples/means_of_columns.d
 # ---- PYTHON setup -----
 # workaround against dub bugs
 - dub build --root=examples/flex_plot
 - dub build --root=examples/flex_plot/flex_common
 # weird hack
 - "set PYTHONPATH=%MINICONDA%\\lib;%MINICONDA%\\lib\\lib-dynload;%MINICONDA%\\envs\\condaenv\\lib;%MINICONDA%\\envs\\condaenv\\lib\\site-packages"
 - echo %PYTHONPATH%
 - dub run --single examples/flex_plot.d -v -- normal
 # check file size
 - FOR %%A IN (plots/dist_normal_hs.pdf) DO set size=%%~zA
 - echo %size%
 - IF %size% LEQ 20000 exit /b 2

notifications:
 - provider: Webhook
   url: https://webhooks.gitter.im/e/56aae174f8cc81f4eda4
 #- provider: Email
   #to:
    #- devteam@mir.rocks
   #on_build_success: false
   #on_build_failure: true
   #on_build_status_changed: true
